{"version":3,"sources":["utils.js","components/Navbar.js","components/Header.js","components/Footer.js","components/Graphic.js","components/App.js","copy.js","serviceWorker.js","index.js"],"names":["shorten","text","split","slice","join","injectSheet","navbar","display","justifyContent","paddingTop","paddingBottom","background","logo","height","_ref","classes","react_default","a","createElement","className","href","src","alt","header","marginBottom","marginTop","headline","textAlign","padding","fontFamily","fontSize","lineHeight","color","margin","meta","maxWidth","byline","fontWeight","& a","smallButMightyLine","width","backgroundColor","timestamp","@media (max-width: 991px)","title","@media (max-width: 767px)","@media (max-width: 575px)","writer","photographer","date","toUpperCase","stickybits","SCROLLAMA_OFFSET","window","innerWidth","imgStyles","position","objectFit","transitionDuration","styles","main","flexDirection","imageContainer","transform","top","img","Object","objectSpread","visibility","opacity","hideImg","content","step","zIndex","Graphic","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onStepEnter","image","data","setState","slides","images","steps","map","_ref2","push","index_es","key","state","_this$props","id","_ref3","components_Navbar","components_Header","offset","components_Footer","Component","archieml","load","App","components_Graphic","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6e24eb8.chunk.js","sourcesContent":["const NUM_WORDS = 15;\n\nexport const shorten = text =>\n  text\n    .split(' ')\n    .slice(0, NUM_WORDS)\n    .join(' ') + '\\u2026';\n","import React from 'react';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  navbar: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: '13px',\n    paddingBottom: '9px',\n    background: '#fff',\n  },\n  logo: {\n    height: '17px',\n  },\n};\n\nconst Navbar = ({ classes }) => {\n  return (\n    <div className={classes.navbar}>\n      <a href=\"http://columbiaspectator.com\">\n        <img\n          className={classes.logo}\n          src=\"https://s3.amazonaws.com/spec-imagehosting/spectator-logo.png\"\n          alt=\"Columbia Spectator Logo\"\n        />\n      </a>\n    </div>\n  );\n};\n\nexport default injectSheet(styles)(Navbar);\n","import React from 'react';\nimport injectSheet from 'react-jss';\n\nconst styles = {\n  header: {\n    marginBottom: '80vh',\n    marginTop: '33vh',\n  },\n  headline: {\n    textAlign: 'center',\n    padding: '0 15%',\n    fontFamily: 'Merriweather',\n    fontSize: '2.5rem',\n    lineHeight: 1.5,\n    color: '#333',\n    margin: 0,\n    marginBottom: '1.7rem',\n  },\n  meta: {\n    margin: '0 auto',\n    maxWidth: '650px',\n    textAlign: 'center',\n  },\n  byline: {\n    fontSize: '0.93rem',\n    fontFamily: 'Open Sans',\n    color: '#777',\n    margin: 0,\n    fontWeight: 300,\n    marginBottom: '5px',\n    '& a': {\n      color: '#000',\n    },\n  },\n  smallButMightyLine: {\n    margin: '35px auto 25px auto',\n    width: '80px',\n    height: '1px',\n    backgroundColor: '#ddd',\n  },\n  timestamp: {\n    fontSize: '0.8rem',\n    fontFamily: 'Open Sans',\n    padding: '0 10%',\n    margin: '0 auto',\n    color: '#aaa',\n    fontWeight: 300,\n    lineHeight: 1.6,\n  },\n  '@media (max-width: 991px)': {\n    title: {\n      width: '92%',\n    },\n  },\n  '@media (max-width: 767px)': {\n    header: {\n      padding: '42px 0',\n      marginTop: '24vh',\n      background: 'rgba(255, 255, 255, 0.9)',\n    },\n    smallButMightyLine: {\n      backgroundColor: '#aaa',\n    },\n    byline: {\n      color: '#333',\n      fontWeight: 400,\n    },\n    timestamp: {\n      color: '#333',\n      fontWeight: 400,\n    },\n  },\n  '@media (max-width: 575px)': {\n    headline: {\n      fontSize: '2.1rem',\n    },\n  },\n};\n\nconst Header = ({ classes, header }) => {\n  let { headline, writer, photographer, date } = header;\n  date = date.toUpperCase();\n\n  return (\n    <div className={classes.header}>\n      <p className={classes.headline}>{headline}</p>\n      <div className={classes.meta}>\n        <p className={classes.byline}>Written by {writer}</p>\n        <p className={classes.byline}>Photography by {photographer}</p>\n        <div className={classes.smallButMightyLine} />\n        <p className={classes.timestamp}>\n          {date}\n          <br />\n          GRAPHICS BY JASON KAO\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default injectSheet(styles)(Header);\n","import React from 'react';\nimport injectSheet from 'react-jss';\n\nconst styles = {};\n\nconst Footer = ({ classes }) => {\n  return null;\n};\n\nexport default injectSheet(styles)(Footer);\n","import React, { Component } from 'react';\nimport { Scrollama, Step } from 'react-scrollama';\nimport injectSheet from 'react-jss';\nimport stickybits from 'stickybits';\nimport { shorten } from '../utils';\nimport Navbar from './Navbar';\nimport Header from './Header';\nimport Footer from './Footer';\n\nconst STICKY_ID = 'make-me-rad-n-sticky';\nstickybits('#' + STICKY_ID);\n\nconst SCROLLAMA_OFFSET = window.innerWidth > 575 ? 0.5 : 0.8;\n\nconst imgStyles = {\n  position: 'absolute',\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  transitionDuration: '.6s',\n};\n\nconst styles = {\n  main: {\n    marginBottom: '2rem',\n    fontFamily: 'Helvetica',\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n  imageContainer: {\n    transform: 'translate3d(0, 0, 0)',\n    position: 'sticky',\n    width: '50vw',\n    height: '100vh',\n    top: 0,\n  },\n  img: {\n    ...imgStyles,\n    visibility: 'visible',\n    opacity: 1,\n  },\n  hideImg: {\n    ...imgStyles,\n    visibility: 'hidden',\n    opacity: 0,\n  },\n  content: {\n    width: '50vw',\n  },\n  step: {\n    margin: '0 auto',\n    maxWidth: '360px',\n    padding: '0 10%',\n    marginBottom: '90vh',\n  },\n  text: {\n    fontFamily: 'Merriweather',\n    fontSize: '1.2rem',\n    lineHeight: '1.8',\n    margin: 0,\n  },\n\n  '@media (max-width: 767px)': {\n    main: {\n      flexDirection: 'column',\n    },\n    imageContainer: {\n      width: '100vw',\n    },\n    content: {\n      paddingTop: 0,\n      zIndex: '1',\n      width: '100%',\n      transform: 'translateY(-100vh)', // someone stop me\n    },\n    step: {\n      backgroundColor: 'rgba(255, 255, 255, 0.9)',\n      padding: '20px',\n      maxWidth: '420px',\n    },\n    text: {\n      justifyContent: 'center',\n      textAlign: 'center',\n    },\n  },\n};\n\nclass Graphic extends Component {\n  constructor(props) {\n    super(props);\n    const { classes, slides } = props;\n\n    this.images = [];\n\n    this.steps = slides.map(({ image, text }) => {\n      this.images.push({\n        src: image,\n        alt: shorten(text),\n      });\n      return (\n        <Step data={image} key={image}>\n          <div className={classes.step}>\n            <p className={classes.text}>{text}</p>\n          </div>\n        </Step>\n      );\n    });\n\n    this.state = {\n      image: this.images[0].src,\n    };\n  }\n\n  onStepEnter = ({ data: image }) => {\n    this.setState({ image });\n  };\n\n  render() {\n    const { image } = this.state;\n    const { classes, header } = this.props;\n\n    return (\n      <div className={classes.main}>\n        <div className={classes.imageContainer} id={STICKY_ID}>\n          {this.images.map(({ src, alt }) => (\n            <img\n              key={src}\n              className={image === src ? classes.img : classes.hideImg}\n              src={src}\n              alt={alt}\n            />\n          ))}\n        </div>\n        <div className={classes.content}>\n          <Navbar />\n          <Header header={header} />\n          <Scrollama offset={SCROLLAMA_OFFSET} onStepEnter={this.onStepEnter}>\n            {this.steps}\n          </Scrollama>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectSheet(styles)(Graphic);\n","import React from 'react';\nimport archieml from 'archieml';\nimport copyString from '../copy';\n\nimport Graphic from './Graphic';\n\nconst { header, slides } = archieml.load(copyString);\n\nconst App = () => (\n  <div>\n    <Graphic slides={slides} header={header} />\n  </div>\n);\n\nexport default App;\n","export default `\n\n{header}\n\nheadline: Dean Awn Funeral Photo Essay + Graphics\nwriter: Jelani Cobbs\nphotographer: Amelia Amelia\ndate: May 14, 2019\n{}\n\n[slides]\n\nimage: https://int.nyt.com/data/tap-stories/assets/5c06dc9c94db960001b82f84/069d4821f81611e894354b825341e8a4-img.jpg\n\ntext: On Monday night and Tuesday, lines snaked throughout the Capitol as people waited for a chance to stand before Mr. Bush’s coffin.\n\nimage: https://int.nyt.com/data/tap-stories/assets/5c06dc9c94db960001b82f84/7330bdb1f80111e88828fb98e26a0fcb-img.jpg\n\ntext: On Monday night and Tuesday, lines snaked throughout the Capitol as people waited for a chance to stand before Mr. Bush’s coffin.\n\n[]\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'intersection-observer';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}